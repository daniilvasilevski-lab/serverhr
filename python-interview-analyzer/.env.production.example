# ===================================================================
# PRODUCTION ENVIRONMENT CONFIGURATION
# Interview Analyzer - Production Ready Setup
# ===================================================================
#
# ИНСТРУКЦИЯ:
# 1. Скопируйте этот файл: cp .env.production.example .env
# 2. Заполните все ОБЯЗАТЕЛЬНЫЕ параметры
# 3. Перезапустите: docker-compose restart app
#
# ===================================================================

# ═══════════════════════════════════════════════════════════════════
# ОБЯЗАТЕЛЬНЫЕ НАСТРОЙКИ (БЕЗ НИХ СИСТЕМА НЕ РАБОТАЕТ!)
# ═══════════════════════════════════════════════════════════════════

# OpenAI API ключ (ОБЯЗАТЕЛЬНО!)
# Получить здесь: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your-real-openai-api-key-here

# Google Service Account credentials (ОБЯЗАТЕЛЬНО для Google Sheets)
# Путь к JSON файлу с ключом service account
GOOGLE_SERVICE_ACCOUNT_KEY=/app/credentials/service-account.json

# URL входной таблицы Google Sheets (откуда берём интервью)
# Формат: https://docs.google.com/spreadsheets/d/SPREADSHEET_ID/edit
SOURCE_SHEET_URL=https://docs.google.com/spreadsheets/d/YOUR_SOURCE_SHEET_ID_HERE/edit

# URL выходной таблицы Google Sheets (куда сохраняем результаты)
RESULTS_SHEET_URL=https://docs.google.com/spreadsheets/d/YOUR_RESULTS_SHEET_ID_HERE/edit


# ═══════════════════════════════════════════════════════════════════
# НАСТРОЙКИ ПРИЛОЖЕНИЯ
# ═══════════════════════════════════════════════════════════════════

# Режим работы (production / development / testing)
ENV=production

# Порт для запуска сервера
PORT=8000

# Хост для запуска
HOST=0.0.0.0

# Уровень логирования (DEBUG / INFO / WARNING / ERROR)
LOG_LEVEL=INFO

# Путь к файлу логов
LOG_FILE=/app/logs/interview-analyzer.log

# Временная директория
TEMP_DIR=/app/temp


# ═══════════════════════════════════════════════════════════════════
# НАСТРОЙКИ АНАЛИЗА
# ═══════════════════════════════════════════════════════════════════

# Язык по умолчанию (ru / en / pl)
DEFAULT_LANGUAGE=ru

# Размер модели Whisper для транскрипции
# Варианты: tiny, base, small, medium, large
# tiny - самый быстрый, но менее точный
# large - самый точный, но медленный
WHISPER_MODEL=base

# Максимальный размер видео в MB
MAX_VIDEO_SIZE_MB=100

# Таймаут для скачивания видео (секунды)
VIDEO_DOWNLOAD_TIMEOUT=300


# ═══════════════════════════════════════════════════════════════════
# АВТОМАТИЧЕСКАЯ ОБРАБОТКА
# ═══════════════════════════════════════════════════════════════════

# Включить автоматическое сканирование Google Sheets (true / false)
ENABLE_AUTO_PROCESSING=true

# Интервал сканирования в минутах
# Каждые N минут система будет проверять новые интервью
SCAN_INTERVAL_MINUTES=5

# Максимальное количество одновременных анализов
# Рекомендуется: 1-3 для экономии ресурсов
MAX_CONCURRENT_ANALYSES=2


# ═══════════════════════════════════════════════════════════════════
# ПРОИЗВОДИТЕЛЬНОСТЬ
# ═══════════════════════════════════════════════════════════════════

# Количество worker процессов
# Рекомендуется: (CPU cores * 2) + 1
WORKERS=1

# Детальное логирование анализа (true / false)
# Включите для debugging, выключите в production для производительности
DETAILED_ANALYSIS_LOGGING=false


# ═══════════════════════════════════════════════════════════════════
# БЕЗОПАСНОСТЬ
# ═══════════════════════════════════════════════════════════════════

# Секретный ключ для JWT (если используется)
SECRET_KEY=change-this-to-random-secret-key-in-production

# Разрешенные CORS origins (через запятую)
# Для production укажите только ваши домены!
ALLOWED_ORIGINS=https://yourdomain.com,https://app.yourdomain.com


# ═══════════════════════════════════════════════════════════════════
# МОНИТОРИНГ И ОТЛАДКА (ОПЦИОНАЛЬНО)
# ═══════════════════════════════════════════════════════════════════

# Sentry DSN для отслеживания ошибок
# Получить здесь: https://sentry.io
# SENTRY_DSN=https://your-sentry-dsn-here@sentry.io/project-id

# Включить метрики Prometheus (true / false)
ENABLE_METRICS=false


# ═══════════════════════════════════════════════════════════════════
# БАЗА ДАННЫХ (ОПЦИОНАЛЬНО)
# ═══════════════════════════════════════════════════════════════════

# URL подключения к базе данных PostgreSQL
# Формат: postgresql://user:password@host:port/database
# DATABASE_URL=postgresql://interview_user:strong_password@postgres:5432/interview_db


# ═══════════════════════════════════════════════════════════════════
# КЭШИРОВАНИЕ (ОПЦИОНАЛЬНО)
# ═══════════════════════════════════════════════════════════════════

# Redis URL для кеширования
# REDIS_URL=redis://redis:6379/0

# Время жизни кеша в секундах (1 час)
CACHE_TTL=3600


# ===================================================================
# ГОТОВО! Сохраните файл и перезапустите приложение:
#   docker-compose restart app
# ===================================================================
